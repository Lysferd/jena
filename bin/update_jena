#!/usr/bin/env ruby
lib = File.expand_path('../../lib/', __FILE__)
$:.unshift lib unless $:.include?(lib)

require 'rubygems'
require 'fileutils'
require 'open-uri'

require 'jena_jruby/version.rb'

LATEST_JENA="http://archive.apache.org/dist/jena/binaries/apache-jena-#{Jena::JENA_VERSION}.zip"
OUTPUT="downloads/jena-#{Jena::JENA_VERSION}.zip"

FileUtils.mkdir_p "downloads"

unless File.exist? OUTPUT
  puts "Downloading Jena #{Jena::JENA_VERSION}..."
  open( LATEST_JENA ) do |url|
    File.open( OUTPUT,"wb" ) do |file|
      file.puts url.read
    end
  end
end

`unzip -jo #{OUTPUT} **/lib/*.jar -x '**/lib/junit*.jar' '**/lib/*tests.jar' -d javalib`

puts "Writing lib/jena_jruby/jars.rb ..."
r = File.open( 'lib/jena_jruby/jars.rb', 'w' )
Dir.glob( 'javalib/*.jar' ).each do |f|
  f =~ /javalib\/(.*)\.jar/
  r << "require '#{$1}'\n"
end
r.close

puts "---Debug---"
puts Dir.glob("**/*") # for all files

# overwrite ARQ jar with the one from
puts "Fixing jena-arq timeout ..."
FIXED_ARQ = "https://github.com/adrapereira/jena/releases/download/jena-arq-2.13.0-fixtimeout/jena-arq-2.13.0-fixtimeout.jar"
ORIGINAL_ARQ = "javalib/jena-arq-2.13.0.jar"
open( FIXED_ARQ ) do |url|
  File.open( ORIGINAL_ARQ,"wb" ) do |file|
      file.puts url.read
    end
end
